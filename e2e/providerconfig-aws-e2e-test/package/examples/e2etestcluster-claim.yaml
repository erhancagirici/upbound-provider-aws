apiVersion: aws.platformref.upbound.io/v1alpha1
kind: E2ETestCluster
metadata:
  name: aws-pc-e2e-test
  namespace: default
spec:
  compositeDeletePolicy: Foreground
  parameters:
    id: aws-pc-e2e-test
    region: us-west-2
    version: "1.28"
    iam:
      # replace with your custom roleArn that will administer the EKS cluster:
      roleArn: "arn:aws:iam::153891904029:role/AWSReservedSSO_AdministratorAccess_8a8c615329b64b23"
    nodes:
      count: 1
      instanceType: t3.medium
    irsa:
      condition: StringEquals
      policyDocument: |
        {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Action": [
                        "ec2:*"
                    ],
                    "Effect": "Allow",
                    "Resource": "*"
                }
            ]
        }
      serviceAccount:
        name: my-xpsa
        namespace: upbound-system
    targetClusterParameters:
      provider:
        familyPackage: "xpkg.upbound.io/upbound/provider-family-aws:v1.3.0"
        ec2Package: "xpkg.upbound.io/upbound/provider-aws-ec2:v1.3.0"
        rdsPackage: "xpkg.upbound.io/upbound/provider-aws-rds:v1.3.0"
      crossplaneVersion: 1.15.2
  writeConnectionSecretToRef:
    name: aws-pc-e2e-test-kubeconfig
status:
  irsa:
    roleArn: abc
    chainedRoleARNs:
      - "chained-role-arn"
  webIdentity:
    roleArn: webid-role-arn
    chainedRoleARNs:
      - "chained-role-arn"
